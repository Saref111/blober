{"version":3,"file":"commonHelpers.js","sources":["../src/js/helpers.ts","../src/js/blober.ts","../src/main.ts"],"sourcesContent":["export type HexColor = `#${string}`;\n\nexport const generateHexColor = (): HexColor => {\n    return `#${Math.floor(Math.random()*16777215).toString(16)}`;\n}\n\nexport const getRandomInt = (min: number, max: number) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport const removeRandomFromArray = <T>(arr: T[]): T => {\n    const index = getRandomInt(0, arr.length - 1);\n    return arr.splice(index, 1)[0];\n};\n","import generator from \"blobshape\";\nimport { HexColor, generateHexColor, getRandomInt, removeRandomFromArray } from \"./helpers\";\n\nexport type BlobConfig = {\n    color?: HexColor;\n};\n\nconst SVG_SIZE = 400;\nconst FILTER = `<defs>\n                    <filter id=\"filter\" x=\"-100\" y=\"-100\" width=\"750\" height=\"750\"\n                    filterUnits=\"userSpaceOnUse\" col4or-interpolation-filters=\"sRGB\">\n                        <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\n                        <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\n                        <feGaussianBlur stdDeviation=\"65.5\" result=\"effect1_foregroundBlur_32_5690\" />\n                    </filter>\n                </defs>`;\n\n                \nconst possibleTransforms = [\n    \"translate(75, 75)\", \n    \"translate(0, -75)\",\n    \"translate(-75, 0)\",\n];\n                \n\n\n\nconst getPathString = (color: HexColor) => {\n    const { path } = generator({\n        size: SVG_SIZE,\n        growth: 1,\n    });\n\n    return `<g transform=\"${removeRandomFromArray(possibleTransforms)}\" filter=\"url(#filter)\">\n                <path d=\"${path}\" fill=\"${color}\" >\n                    <animate \n                        attributeName=\"d\" \n                        dur=\"10s\" \n                        repeatCount=\"indefinite\" \n                        keyTimes=\"0;0.33;0.67;1\" \n                        values=\"${path};${generator({ size: SVG_SIZE, growth: 1.5 }).path};${generator({ size: SVG_SIZE, growth: 1.5 }).path};${path}\" \n                    />\n                </path>\n            </g>`;\n        };\n\nconst generateBlob = (config: BlobConfig = {}, svg: HTMLElement) => {\n    if (!config.color) {\n        config.color = generateHexColor();\n    }\n\n    const purpleBlobString = getPathString(config.color);\n\n    svg.insertAdjacentHTML('afterbegin', purpleBlobString);\n}\n\nexport const generateBlobs = (blobConfigs: BlobConfig[]) => {\n    const svg = document.querySelector(\".screen\") as HTMLElement;\n    svg.innerHTML = \"\";\n    svg.insertAdjacentHTML('beforeend', FILTER);\n\n    blobConfigs.forEach((config) => {\n        generateBlob(config, svg);\n    });\n    \n};\n","import {generateBlobs} from \"./js/blober.js\";\n\ngenerateBlobs([{}]);\n"],"names":["generateHexColor","getRandomInt","min","max","removeRandomFromArray","arr","index","SVG_SIZE","FILTER","possibleTransforms","getPathString","color","path","generator","generateBlob","config","svg","purpleBlobString","generateBlobs","blobConfigs"],"mappings":"svBAEO,MAAMA,EAAmB,IACrB,IAAI,KAAK,MAAM,KAAK,SAAS,QAAQ,EAAE,SAAS,EAAE,IAGhDC,EAAe,CAACC,EAAaC,IAAgB,KAAK,MAAM,KAAK,OAAA,GAAYA,EAAMD,EAAM,EAAE,EAAIA,EAE3FE,EAA4BC,GAAgB,CACrD,MAAMC,EAAQL,EAAa,EAAGI,EAAI,OAAS,CAAC,EAC5C,OAAOA,EAAI,OAAOC,EAAO,CAAC,EAAE,EAChC,ECJMC,EAAW,IACXC,EAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAUTC,EAAqB,CACvB,oBACA,oBACA,mBACJ,EAKMC,EAAiBC,GAAoB,CACjC,KAAA,CAAE,KAAAC,CAAK,EAAIC,EAAU,CACvB,KAAMN,EACN,OAAQ,CAAA,CACX,EAEM,MAAA,iBAAiBH,EAAsBK,CAAkB;AAAA,2BACzCG,YAAeD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAMRC,KAAQC,EAAU,CAAE,KAAMN,EAAU,OAAQ,GAAK,CAAA,EAAE,QAAQM,EAAU,CAAE,KAAMN,EAAU,OAAQ,GAAI,CAAC,EAAE,QAAQK;AAAA;AAAA;AAAA,iBAIxI,EAEFE,EAAe,CAACC,EAAqB,GAAIC,IAAqB,CAC3DD,EAAO,QACRA,EAAO,MAAQf,KAGb,MAAAiB,EAAmBP,EAAcK,EAAO,KAAK,EAE/CC,EAAA,mBAAmB,aAAcC,CAAgB,CACzD,EAEaC,EAAiBC,GAA8B,CAClD,MAAAH,EAAM,SAAS,cAAc,SAAS,EAC5CA,EAAI,UAAY,GACZA,EAAA,mBAAmB,YAAaR,CAAM,EAE9BW,EAAA,QAASJ,GAAW,CAC5BD,EAAaC,EAAQC,CAAG,CAAA,CAC3B,CAEL,EC/DAE,EAAc,CAAC,CAAE,CAAA,CAAC"}